<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM32L476RG_NUCLEO\BlueMS1_ST.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM32L476RG_NUCLEO\BlueMS1_ST.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Mon May 01 05:05:04 2017
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c8]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c8]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[b0]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b0]">BusFault_Handler</a><BR>
 <LI><a href="#[ae]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ae]">HardFault_Handler</a><BR>
 <LI><a href="#[af]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[af]">MemManage_Handler</a><BR>
 <LI><a href="#[b1]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c8]">ADC1_2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e5]">ADC3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b0]">BusFault_Handler</a> from stm32l4xx_it.o(i.BusFault_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ca]">CAN1_RX0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[cb]">CAN1_RX1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[cc]">CAN1_SCE_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c9]">CAN1_TX_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f6]">COMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f3]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f4]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f5]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e0]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c1]">DMA1_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c2]">DMA1_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c3]">DMA1_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c4]">DMA1_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c5]">DMA1_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c6]">DMA1_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c7]">DMA1_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ee]">DMA2_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ef]">DMA2_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f0]">DMA2_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f1]">DMA2_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f2]">DMA2_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[fa]">DMA2_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[fb]">DMA2_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b3]">DebugMon_Handler</a> from stm32l4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[bc]">EXTI0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[de]">EXTI15_10_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[bd]">EXTI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[be]">EXTI2_IRQHandler</a> from stm32l4xx_it.o(i.EXTI2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[bf]">EXTI3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[c0]">EXTI4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[cd]">EXTI9_5_IRQHandler</a> from stm32l4xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ba]">FLASH_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e6]">FMC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[106]">FPU_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6]">HTS221_H_Check_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_H_Check_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[2]">HTS221_H_DeInit</a> from hts221_driver_hl.o(i.HTS221_H_DeInit) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[d]">HTS221_H_Get_DRDY_Status</a> from hts221_driver_hl.o(i.HTS221_H_Get_DRDY_Status) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[7]">HTS221_H_Get_Hum</a> from hts221_driver_hl.o(i.HTS221_H_Get_Hum) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[8]">HTS221_H_Get_ODR</a> from hts221_driver_hl.o(i.HTS221_H_Get_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[5]">HTS221_H_Get_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_H_Get_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[1]">HTS221_H_Init</a> from hts221_driver_hl.o(i.HTS221_H_Init) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[b]">HTS221_H_Read_Reg</a> from hts221_driver_hl.o(i.HTS221_H_Read_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[4]">HTS221_H_Sensor_Disable</a> from hts221_driver_hl.o(i.HTS221_H_Sensor_Disable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[3]">HTS221_H_Sensor_Enable</a> from hts221_driver_hl.o(i.HTS221_H_Sensor_Enable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[9]">HTS221_H_Set_ODR</a> from hts221_driver_hl.o(i.HTS221_H_Set_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[a]">HTS221_H_Set_ODR_Value</a> from hts221_driver_hl.o(i.HTS221_H_Set_ODR_Value) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[c]">HTS221_H_Write_Reg</a> from hts221_driver_hl.o(i.HTS221_H_Write_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[13]">HTS221_T_Check_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_T_Check_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[f]">HTS221_T_DeInit</a> from hts221_driver_hl.o(i.HTS221_T_DeInit) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[1a]">HTS221_T_Get_DRDY_Status</a> from hts221_driver_hl.o(i.HTS221_T_Get_DRDY_Status) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[15]">HTS221_T_Get_ODR</a> from hts221_driver_hl.o(i.HTS221_T_Get_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[14]">HTS221_T_Get_Temp</a> from hts221_driver_hl.o(i.HTS221_T_Get_Temp) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[12]">HTS221_T_Get_WhoAmI</a> from hts221_driver_hl.o(i.HTS221_T_Get_WhoAmI) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[e]">HTS221_T_Init</a> from hts221_driver_hl.o(i.HTS221_T_Init) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[18]">HTS221_T_Read_Reg</a> from hts221_driver_hl.o(i.HTS221_T_Read_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[11]">HTS221_T_Sensor_Disable</a> from hts221_driver_hl.o(i.HTS221_T_Sensor_Disable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[10]">HTS221_T_Sensor_Enable</a> from hts221_driver_hl.o(i.HTS221_T_Sensor_Enable) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[16]">HTS221_T_Set_ODR</a> from hts221_driver_hl.o(i.HTS221_T_Set_ODR) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[17]">HTS221_T_Set_ODR_Value</a> from hts221_driver_hl.o(i.HTS221_T_Set_ODR_Value) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[19]">HTS221_T_Write_Reg</a> from hts221_driver_hl.o(i.HTS221_T_Write_Reg) referenced 2 times from hts221_driver_hl.o(.data)
 <LI><a href="#[ae]">HardFault_Handler</a> from stm32l4xx_it.o(i.HardFault_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d6]">I2C1_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d5]">I2C1_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d8]">I2C2_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d7]">I2C2_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ff]">I2C3_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[fe]">I2C3_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[104]">LCD_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[20]">LPS22HB_P_Check_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Check_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[1c]">LPS22HB_P_DeInit</a> from lps22hb_driver_hl.o(i.LPS22HB_P_DeInit) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[27]">LPS22HB_P_Get_DRDY_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_DRDY_Status) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[22]">LPS22HB_P_Get_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[21]">LPS22HB_P_Get_Press</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_Press) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[1f]">LPS22HB_P_Get_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Get_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[1b]">LPS22HB_P_Init</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Init) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[25]">LPS22HB_P_Read_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Read_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[1e]">LPS22HB_P_Sensor_Disable</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Disable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[1d]">LPS22HB_P_Sensor_Enable</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Enable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[23]">LPS22HB_P_Set_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[24]">LPS22HB_P_Set_ODR_Value</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR_Value) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[26]">LPS22HB_P_Write_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_P_Write_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[2d]">LPS22HB_T_Check_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Check_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[29]">LPS22HB_T_DeInit</a> from lps22hb_driver_hl.o(i.LPS22HB_T_DeInit) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[34]">LPS22HB_T_Get_DRDY_Status</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_DRDY_Status) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[2f]">LPS22HB_T_Get_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[2e]">LPS22HB_T_Get_Temp</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_Temp) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[2c]">LPS22HB_T_Get_WhoAmI</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Get_WhoAmI) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[28]">LPS22HB_T_Init</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Init) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[32]">LPS22HB_T_Read_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Read_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[2b]">LPS22HB_T_Sensor_Disable</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Disable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[2a]">LPS22HB_T_Sensor_Enable</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Enable) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[30]">LPS22HB_T_Set_ODR</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[31]">LPS22HB_T_Set_ODR_Value</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR_Value) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[33]">LPS22HB_T_Write_Reg</a> from lps22hb_driver_hl.o(i.LPS22HB_T_Write_Reg) referenced 2 times from lps22hb_driver_hl.o(.data)
 <LI><a href="#[f7]">LPTIM1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f8]">LPTIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[fc]">LPUART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4e]">LSM303AGR_M_Check_WhoAmI</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Check_WhoAmI) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[4a]">LSM303AGR_M_DeInit</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_DeInit) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[4f]">LSM303AGR_M_Get_Axes</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_Axes) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[50]">LSM303AGR_M_Get_AxesRaw</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_AxesRaw) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[5a]">LSM303AGR_M_Get_DRDY_Status</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_DRDY_Status) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[55]">LSM303AGR_M_Get_FS</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_FS) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[52]">LSM303AGR_M_Get_ODR</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_ODR) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[51]">LSM303AGR_M_Get_Sensitivity</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_Sensitivity) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[4d]">LSM303AGR_M_Get_WhoAmI</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_WhoAmI) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[49]">LSM303AGR_M_Init</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Init) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[58]">LSM303AGR_M_Read_Reg</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Read_Reg) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[4c]">LSM303AGR_M_Sensor_Disable</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Sensor_Disable) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[4b]">LSM303AGR_M_Sensor_Enable</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Sensor_Enable) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[56]">LSM303AGR_M_Set_FS</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_FS) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[57]">LSM303AGR_M_Set_FS_Value</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_FS_Value) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[53]">LSM303AGR_M_Set_ODR</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_ODR) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[54]">LSM303AGR_M_Set_ODR_Value</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_ODR_Value) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[59]">LSM303AGR_M_Write_Reg</a> from lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Write_Reg) referenced 2 times from lsm303agr_mag_driver_hl.o(.data)
 <LI><a href="#[3a]">LSM303AGR_X_Check_WhoAmI</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Check_WhoAmI) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[36]">LSM303AGR_X_DeInit</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_DeInit) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[3b]">LSM303AGR_X_Get_Axes</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_Axes) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[3c]">LSM303AGR_X_Get_AxesRaw</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_AxesRaw) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[44]">LSM303AGR_X_Get_Axes_Status</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_Axes_Status) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[48]">LSM303AGR_X_Get_DRDY_Status</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_DRDY_Status) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[41]">LSM303AGR_X_Get_FS</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_FS) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[3e]">LSM303AGR_X_Get_ODR</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_ODR) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[3d]">LSM303AGR_X_Get_Sensitivity</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_Sensitivity) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[39]">LSM303AGR_X_Get_WhoAmI</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_WhoAmI) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[35]">LSM303AGR_X_Init</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Init) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[46]">LSM303AGR_X_Read_Reg</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Read_Reg) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[38]">LSM303AGR_X_Sensor_Disable</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Sensor_Disable) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[37]">LSM303AGR_X_Sensor_Enable</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Sensor_Enable) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[45]">LSM303AGR_X_Set_Axes_Status</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_Axes_Status) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[42]">LSM303AGR_X_Set_FS</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_FS) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[43]">LSM303AGR_X_Set_FS_Value</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_FS_Value) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[3f]">LSM303AGR_X_Set_ODR</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_ODR) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[40]">LSM303AGR_X_Set_ODR_Value</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_ODR_Value) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[47]">LSM303AGR_X_Write_Reg</a> from lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Write_Reg) referenced 2 times from lsm303agr_acc_driver_hl.o(.data)
 <LI><a href="#[94]">LSM6DSM_G_Check_WhoAmI</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Check_WhoAmI) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[90]">LSM6DSM_G_DeInit</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_DeInit) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[95]">LSM6DSM_G_Get_Axes</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_Axes) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[96]">LSM6DSM_G_Get_AxesRaw</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_AxesRaw) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[9b]">LSM6DSM_G_Get_FS</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_FS) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[98]">LSM6DSM_G_Get_ODR</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_ODR) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[97]">LSM6DSM_G_Get_Sensitivity</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_Sensitivity) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[93]">LSM6DSM_G_Get_WhoAmI</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_WhoAmI) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8f]">LSM6DSM_G_Init</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Init) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[92]">LSM6DSM_G_Sensor_Disable</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Sensor_Disable) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[91]">LSM6DSM_G_Sensor_Enable</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Sensor_Enable) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[9c]">LSM6DSM_G_Set_FS</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_FS) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[9d]">LSM6DSM_G_Set_FS_Value</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_FS_Value) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[99]">LSM6DSM_G_Set_ODR</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_ODR) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[9a]">LSM6DSM_G_Set_ODR_Value</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_ODR_Value) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[85]">LSM6DSM_X_Check_WhoAmI</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Check_WhoAmI) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[81]">LSM6DSM_X_DeInit</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_DeInit) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[78]">LSM6DSM_X_Disable_6D_Orientation</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_6D_Orientation) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[71]">LSM6DSM_X_Disable_Double_Tap_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Double_Tap_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5c]">LSM6DSM_X_Disable_Free_Fall_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Free_Fall_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[60]">LSM6DSM_X_Disable_Pedometer</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Pedometer) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6e]">LSM6DSM_X_Disable_Single_Tap_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Single_Tap_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[64]">LSM6DSM_X_Disable_Step_Counter_Reset</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Step_Counter_Reset) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[67]">LSM6DSM_X_Disable_Tilt_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Tilt_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6a]">LSM6DSM_X_Disable_Wake_Up_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Wake_Up_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[77]">LSM6DSM_X_Enable_6D_Orientation</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_6D_Orientation) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[70]">LSM6DSM_X_Enable_Double_Tap_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Double_Tap_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5b]">LSM6DSM_X_Enable_Free_Fall_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Free_Fall_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5f]">LSM6DSM_X_Enable_Pedometer</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Pedometer) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6d]">LSM6DSM_X_Enable_Single_Tap_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Single_Tap_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[63]">LSM6DSM_X_Enable_Step_Counter_Reset</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Step_Counter_Reset) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[66]">LSM6DSM_X_Enable_Tilt_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Tilt_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[69]">LSM6DSM_X_Enable_Wake_Up_Detection</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Wake_Up_Detection) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[79]">LSM6DSM_X_Get_6D_Orientation_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7b]">LSM6DSM_X_Get_6D_Orientation_XH</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_XH) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7a]">LSM6DSM_X_Get_6D_Orientation_XL</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_XL) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7d]">LSM6DSM_X_Get_6D_Orientation_YH</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_YH) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7c]">LSM6DSM_X_Get_6D_Orientation_YL</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_YL) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7f]">LSM6DSM_X_Get_6D_Orientation_ZH</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_ZH) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7e]">LSM6DSM_X_Get_6D_Orientation_ZL</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_ZL) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[86]">LSM6DSM_X_Get_Axes</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Axes) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[87]">LSM6DSM_X_Get_AxesRaw</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_AxesRaw) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[72]">LSM6DSM_X_Get_Double_Tap_Detection_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Double_Tap_Detection_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8c]">LSM6DSM_X_Get_FS</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_FS) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5d]">LSM6DSM_X_Get_Free_Fall_Detection_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Free_Fall_Detection_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[89]">LSM6DSM_X_Get_ODR</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_ODR) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[61]">LSM6DSM_X_Get_Pedometer_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Pedometer_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[88]">LSM6DSM_X_Get_Sensitivity</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Sensitivity) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6f]">LSM6DSM_X_Get_Single_Tap_Detection_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Single_Tap_Detection_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[62]">LSM6DSM_X_Get_Step_Count</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Step_Count) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[68]">LSM6DSM_X_Get_Tilt_Detection_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Tilt_Detection_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6b]">LSM6DSM_X_Get_Wake_Up_Detection_Status</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Wake_Up_Detection_Status) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[84]">LSM6DSM_X_Get_WhoAmI</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_WhoAmI) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[80]">LSM6DSM_X_Init</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Init) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[83]">LSM6DSM_X_Sensor_Disable</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Sensor_Disable) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[82]">LSM6DSM_X_Sensor_Enable</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Sensor_Enable) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8d]">LSM6DSM_X_Set_FS</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_FS) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8e]">LSM6DSM_X_Set_FS_Value</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_FS_Value) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5e]">LSM6DSM_X_Set_Free_Fall_Threshold</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Free_Fall_Threshold) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8a]">LSM6DSM_X_Set_ODR</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_ODR) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[8b]">LSM6DSM_X_Set_ODR_Value</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_ODR_Value) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[65]">LSM6DSM_X_Set_Pedometer_Threshold</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Pedometer_Threshold) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[76]">LSM6DSM_X_Set_Tap_Duration_Time</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Duration_Time) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[75]">LSM6DSM_X_Set_Tap_Quiet_Time</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Quiet_Time) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[74]">LSM6DSM_X_Set_Tap_Shock_Time</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Shock_Time) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[73]">LSM6DSM_X_Set_Tap_Threshold</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Threshold) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6c]">LSM6DSM_X_Set_Wake_Up_Threshold</a> from lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Wake_Up_Threshold) referenced 2 times from lsm6dsm_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[af]">MemManage_Handler</a> from stm32l4xx_it.o(i.MemManage_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ad]">NMI_Handler</a> from stm32l4xx_it.o(i.NMI_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f9]">OTG_FS_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b7]">PVD_PVM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b4]">PendSV_Handler</a> from stm32l4xx_it.o(i.PendSV_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[fd]">QUADSPI_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[bb]">RCC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[105]">RNG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[df]">RTC_Alarm_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b9]">RTC_WKUP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ac]">Reset_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[100]">SAI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[101]">SAI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e7]">SDMMC1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d9]">SPI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[da]">SPI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e9]">SPI3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[9f]">STC3115_DeInit</a> from stc3115_driver.o(i.STC3115_DeInit) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[ab]">STC3115_GetAlarmStatus</a> from stc3115_driver.o(i.STC3115_GetAlarmStatus) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a9]">STC3115_GetChargeValue</a> from stc3115_driver.o(i.STC3115_GetChargeValue) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a6]">STC3115_GetCurrent</a> from stc3115_driver.o(i.STC3115_GetCurrent) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a5]">STC3115_GetOCV</a> from stc3115_driver.o(i.STC3115_GetOCV) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[aa]">STC3115_GetPresence</a> from stc3115_driver.o(i.STC3115_GetPresence) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a4]">STC3115_GetSOC</a> from stc3115_driver.o(i.STC3115_GetSOC) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a7]">STC3115_GetTemperature</a> from stc3115_driver.o(i.STC3115_GetTemperature) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a8]">STC3115_GetVoltage</a> from stc3115_driver.o(i.STC3115_GetVoltage) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a0]">STC3115_Get_WhoAmI</a> from stc3115_driver.o(i.STC3115_Get_WhoAmI) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[9e]">STC3115_Init</a> from stc3115_driver.o(i.STC3115_Init) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a2]">STC3115_Reset</a> from stc3115_driver.o(i.STC3115_Reset) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a3]">STC3115_Stop</a> from stc3115_driver.o(i.STC3115_Stop) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[a1]">STC3115_Task</a> from stc3115_driver.o(i.STC3115_Task) referenced 2 times from stc3115_driver.o(.data)
 <LI><a href="#[b2]">SVC_Handler</a> from stm32l4xx_it.o(i.SVC_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[102]">SWPMI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b5]">SysTick_Handler</a> from stm32l4xx_it.o(i.SysTick_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[108]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[b8]">TAMP_STAMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ce]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d1]">TIM1_CC_IRQHandler</a> from stm32l4xx_it.o(i.TIM1_CC_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d0]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[cf]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d2]">TIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d3]">TIM3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d4]">TIM4_IRQHandler</a> from stm32l4xx_it.o(i.TIM4_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e8]">TIM5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ec]">TIM6_DAC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ed]">TIM7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e1]">TIM8_BRK_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e4]">TIM8_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e3]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e2]">TIM8_UP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[103]">TSC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[ea]">UART4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[eb]">UART5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[db]">USART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[dc]">USART2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[dd]">USART3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b1]">UsageFault_Handler</a> from stm32l4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b6]">WWDG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[109]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[10b]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[11d]">compass_API_ForceReCalibration</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[118]">compass_API_Init</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11c]">compass_API_IsCalibrated</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11b]">compass_API_Run</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[119]">compass_API_SaveAcc</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11a]">compass_API_SaveMag</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[10a]">fputc</a> from fputc.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[11e]">getCalibrationData</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[117]">iNemoEngine_API_Get_Lib_Version</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[116]">iNemoEngine_API_Propagate</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[115]">iNemoEngine_API_Update</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[111]">iNemoEngine_API_enable_6X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[112]">iNemoEngine_API_enable_9X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[114]">iNemoEngine_API_getGbias</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[10e]">iNemoEngine_API_getKnobs</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[10f]">iNemoEngine_API_get_status_6X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[110]">iNemoEngine_API_get_status_9X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[10c]">iNemoEngine_API_initialize</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[113]">iNemoEngine_API_setGbias</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[10d]">iNemoEngine_API_setKnobs</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[107]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[11f]">setCalibrationData</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[109]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[180]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ac]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c9]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f6]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f3]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f4]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e0]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ee]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ef]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f0]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f1]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f2]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[fa]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[fb]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[106]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ff]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[fe]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[104]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f8]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[fc]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f9]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[fd]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[df]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b9]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[100]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[101]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e7]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e9]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e8]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ed]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e1]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e4]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e2]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[103]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[db]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[137]"></a>m_std</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[169]"></a>rotVect_6X</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[145]"></a>m_q2ypr2_eml</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
</UL>

<P><STRONG><a name="[14d]"></a>m_b_std</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[14e]"></a>m_c_sum</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[150]"></a>osx_MotionFX_initialize</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_SetHandle
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RegisterLicense
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[155]"></a>osx_MotionFX_setKnobs</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[156]"></a>osx_MotionFX_getKnobs</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[157]"></a>osx_MotionFX_getStatus_6X</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[158]"></a>osx_MotionFX_getStatus_9X</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[159]"></a>osx_MotionFX_enable_6X</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[15a]"></a>osx_MotionFX_enable_9X</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[15b]"></a>osx_MotionFX_setGbias</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[15c]"></a>osx_MotionFX_getGbias</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[15d]"></a>osx_MotionFX_update</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[15e]"></a>osx_MotionFX_propagate</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[15f]"></a>osx_MotionFX_getLibVersion</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[160]"></a>osx_MotionFX_compass_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[161]"></a>osx_MotionFX_compass_saveAcc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[162]"></a>osx_MotionFX_compass_saveMag</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[163]"></a>osx_MotionFX_compass_run</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[164]"></a>osx_MotionFX_compass_isCalibrated</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[165]"></a>osx_MotionFX_compass_forceReCalibration</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[166]"></a>osx_MotionFX_getCalibrationData</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[167]"></a>osx_MotionFX_setCalibrationData</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[151]"></a>osx_LibLocker_RegisterLicense</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Decrypt32
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
</UL>

<P><STRONG><a name="[152]"></a>osx_LibLocker_Authenticate</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RetrieveUID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_update
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setKnobs
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_propagate
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getLibVersion
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getKnobs
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_enable_9X
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_enable_6X
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setCalibrationData
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_isCalibrated
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getCalibrationData
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_forceReCalibration
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_run
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_saveMag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_saveAcc
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getGbias
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setGbias
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getStatus_9X
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getStatus_6X
</UL>

<P><STRONG><a name="[154]"></a>osx_LibLocker_UnwrapAPIs</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RetrieveUID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
</UL>

<P><STRONG><a name="[171]"></a>osx_LibLocker_IsNodeFree</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>

<P><STRONG><a name="[153]"></a>osx_LibLocker_SetHandle</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, uldiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[175]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ldiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Get_Acceleration
</UL>

<P><STRONG><a name="[2a5]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, memmove.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memmove.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[140]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memmove.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[291]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memmove.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[176]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[133]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_ClearScreen
</UL>

<P><STRONG><a name="[178]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
</UL>

<P><STRONG><a name="[14c]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Get_Lib_Version
</UL>

<P><STRONG><a name="[14b]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Get_Lib_Version
</UL>

<P><STRONG><a name="[12b]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_c_sum
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[12c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[17c]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, dmul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[12a]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, ddiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[129]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[14f]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dfltui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_c_sum
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[13e]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dfixui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
</UL>

<P><STRONG><a name="[13c]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[13b]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[127]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[125]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, d2f.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
</UL>

<P><STRONG><a name="[2c3]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[173]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[17d]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[17b]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[17a]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2bf]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[17e]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, dsqrt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[17f]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2bc]"></a>__ARM_dcmp4</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, dcmp4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmax
</UL>

<P><STRONG><a name="[121]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[181]"></a>AccEvent_Notify</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, sensor_service.o(i.AccEvent_Notify))
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[186]"></a>Add_ConfigW2ST_Service</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, sensor_service.o(i.Add_ConfigW2ST_Service))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[189]"></a>Add_ConsoleW2ST_Service</STRONG> (Thumb, 338 bytes, Stack size 0 bytes, sensor_service.o(i.Add_ConsoleW2ST_Service))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18a]"></a>Add_HWServW2ST_Service</STRONG> (Thumb, 842 bytes, Stack size 0 bytes, sensor_service.o(i.Add_HWServW2ST_Service))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18b]"></a>Add_SWServW2ST_Service</STRONG> (Thumb, 1036 bytes, Stack size 0 bytes, sensor_service.o(i.Add_SWServW2ST_Service))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18c]"></a>BNRG_SPI_Init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.BNRG_SPI_Init))
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b8]"></a>BSP_ACCELERO_Disable_6D_Orientation_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_6D_Orientation_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1b4]"></a>BSP_ACCELERO_Disable_Double_Tap_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_Double_Tap_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1b3]"></a>BSP_ACCELERO_Disable_Free_Fall_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_Free_Fall_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1b1]"></a>BSP_ACCELERO_Disable_Pedometer_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_Pedometer_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1b5]"></a>BSP_ACCELERO_Disable_Single_Tap_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_Single_Tap_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1b7]"></a>BSP_ACCELERO_Disable_Tilt_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_Tilt_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1b6]"></a>BSP_ACCELERO_Disable_Wake_Up_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Disable_Wake_Up_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[1bc]"></a>BSP_ACCELERO_Enable_Free_Fall_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Enable_Free_Fall_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableHWFreeFall
</UL>

<P><STRONG><a name="[2da]"></a>BSP_ACCELERO_Get_6D_Orientation_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c2]"></a>BSP_ACCELERO_Get_6D_Orientation_XH_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_XH_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[1c1]"></a>BSP_ACCELERO_Get_6D_Orientation_XL_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_XL_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[1c4]"></a>BSP_ACCELERO_Get_6D_Orientation_YH_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_YH_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[1c3]"></a>BSP_ACCELERO_Get_6D_Orientation_YL_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_YL_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[1c6]"></a>BSP_ACCELERO_Get_6D_Orientation_ZH_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_ZH_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[1c5]"></a>BSP_ACCELERO_Get_6D_Orientation_ZL_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_ZL_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[2d6]"></a>BSP_ACCELERO_Get_Double_Tap_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Double_Tap_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d5]"></a>BSP_ACCELERO_Get_Free_Fall_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Free_Fall_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218]"></a>BSP_ACCELERO_Get_ODR</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_ODR))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHWFeatures
</UL>

<P><STRONG><a name="[2db]"></a>BSP_ACCELERO_Get_Pedometer_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Pedometer_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d4]"></a>BSP_ACCELERO_Get_Sensitivity</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Sensitivity))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d7]"></a>BSP_ACCELERO_Get_Single_Tap_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Single_Tap_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c8]"></a>BSP_ACCELERO_Get_Step_Count_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Step_Count_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStepHWPedometer
</UL>

<P><STRONG><a name="[2d9]"></a>BSP_ACCELERO_Get_Tilt_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Tilt_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d8]"></a>BSP_ACCELERO_Get_Wake_Up_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Get_Wake_Up_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18e]"></a>BSP_ACCELERO_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_ACCELERO_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_ACCELERO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[21b]"></a>BSP_ACCELERO_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Sensor_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2d3]"></a>BSP_ACCELERO_Set_FS_Value</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Set_FS_Value))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bd]"></a>BSP_ACCELERO_Set_Free_Fall_Threshold_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Set_Free_Fall_Threshold_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableHWFreeFall
</UL>

<P><STRONG><a name="[1b2]"></a>BSP_ACCELERO_Set_ODR_Value</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_ACCELERO_Set_ODR_Value))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>

<P><STRONG><a name="[191]"></a>BSP_GG_Init</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, sensortile_gg.o(i.BSP_GG_Init))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[193]"></a>BSP_GYRO_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sensortile_gyro.o(i.BSP_GYRO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_GYRO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[21c]"></a>BSP_GYRO_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_gyro.o(i.BSP_GYRO_Sensor_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2ab]"></a>BSP_HUMIDITY_Get_Hum</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_humidity.o(i.BSP_HUMIDITY_Get_Hum))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[197]"></a>BSP_HUMIDITY_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sensortile_humidity.o(i.BSP_HUMIDITY_Init))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_HUMIDITY_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2aa]"></a>BSP_HUMIDITY_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sensortile_humidity.o(i.BSP_HUMIDITY_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[21e]"></a>BSP_HUMIDITY_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_humidity.o(i.BSP_HUMIDITY_Sensor_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[198]"></a>BSP_LED_Init</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, sensortile.o(i.BSP_LED_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[1a4]"></a>BSP_MAGNETO_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sensortile_magneto.o(i.BSP_MAGNETO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_MAGNETO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[21d]"></a>BSP_MAGNETO_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_magneto.o(i.BSP_MAGNETO_Sensor_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2a9]"></a>BSP_PRESSURE_Get_Press</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_pressure.o(i.BSP_PRESSURE_Get_Press))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[1a5]"></a>BSP_PRESSURE_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sensortile_pressure.o(i.BSP_PRESSURE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_PRESSURE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2a8]"></a>BSP_PRESSURE_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sensortile_pressure.o(i.BSP_PRESSURE_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[220]"></a>BSP_PRESSURE_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_pressure.o(i.BSP_PRESSURE_Sensor_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2ad]"></a>BSP_TEMPERATURE_Get_Temp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sensortile_temperature.o(i.BSP_TEMPERATURE_Get_Temp))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[1a6]"></a>BSP_TEMPERATURE_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sensortile_temperature.o(i.BSP_TEMPERATURE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_TEMPERATURE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[2ac]"></a>BSP_TEMPERATURE_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sensortile_temperature.o(i.BSP_TEMPERATURE_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[21f]"></a>BSP_TEMPERATURE_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sensortile_temperature.o(i.BSP_TEMPERATURE_Sensor_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[1a7]"></a>BlueNRG_DataPresent</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.BlueNRG_DataPresent))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[1a9]"></a>BlueNRG_RST</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.BlueNRG_RST))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ab]"></a>BlueNRG_SPI_Read_All</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.BlueNRG_SPI_Read_All))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[1ad]"></a>BlueNRG_SPI_Write</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.BlueNRG_SPI_Write))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
</UL>

<P><STRONG><a name="[b0]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1fc]"></a>Clear_SPI_EXTI_Flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.Clear_SPI_EXTI_Flag))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[b3]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1b0]"></a>DisableHWFeatures</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, hwadvancefeatures.o(i.DisableHWFeatures))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_ODR_Value
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Wake_Up_Detection_Ext
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Tilt_Detection_Ext
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Single_Tap_Detection_Ext
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Pedometer_Ext
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Free_Fall_Detection_Ext
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Double_Tap_Detection_Ext
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_6D_Orientation_Ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableHWFreeFall
</UL>

<P><STRONG><a name="[1b9]"></a>Disable_SPI_IRQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.Disable_SPI_IRQ))
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[be]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.EXTI2_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1bb]"></a>EnableHWFreeFall</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hwadvancefeatures.o(i.EnableHWFreeFall))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_Free_Fall_Threshold_Ext
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Free_Fall_Detection_Ext
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableHWFeatures
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1be]"></a>Enable_SPI_IRQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.Enable_SPI_IRQ))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[1bf]"></a>Environmental_Update</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, sensor_service.o(i.Environmental_Update))
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[1c0]"></a>GetHWOrientation6D</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, hwadvancefeatures.o(i.GetHWOrientation6D))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_ZL_Ext
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_ZH_Ext
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_YL_Ext
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_YH_Ext
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_XL_Ext
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_XH_Ext
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c7]"></a>GetStepHWPedometer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hwadvancefeatures.o(i.GetStepHWPedometer))
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Step_Count_Ext
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a0]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.HAL_Delay))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_PRESSURE_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
</UL>

<P><STRONG><a name="[1c9]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[1ba]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>

<P><STRONG><a name="[19a]"></a>HAL_GPIO_Init</STRONG> (Thumb, 524 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init_All
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Sensor_IO_ITConfig
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>

<P><STRONG><a name="[1a8]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
</UL>

<P><STRONG><a name="[1aa]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init_All
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Enable
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Disable
</UL>

<P><STRONG><a name="[182]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Environmental_Update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Notify
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[216]"></a>HAL_I2C_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>

<P><STRONG><a name="[1cd]"></a>HAL_I2C_Init</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>

<P><STRONG><a name="[1cf]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[1d4]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 412 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_UpdateScreen
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteCommand
</UL>

<P><STRONG><a name="[1cc]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[1ce]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[2a6]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d9]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1da]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1ae]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[1af]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Sensor_IO_ITConfig
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>

<P><STRONG><a name="[1dc]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Sensor_IO_ITConfig
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[199]"></a>HAL_PWREx_EnableVddIO2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableVddIO2))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>

<P><STRONG><a name="[293]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[2cf]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d0]"></a>HAL_RCCEx_DisableLSECSS</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_DisableLSECSS))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_RCCEx_EnableMSIPLLMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_EnableMSIPLLMode))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dd]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1016 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>

<P><STRONG><a name="[1e0]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 416 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e1]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[1e2]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1378 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a3]"></a>HAL_SPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
</UL>

<P><STRONG><a name="[18d]"></a>HAL_SPI_Init</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
</UL>

<P><STRONG><a name="[1e4]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.HAL_SPI_MspInit))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[1ac]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 682 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[1db]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1ef]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1f1]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1e7]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e8]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32l4xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[1eb]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1ea]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[1f2]"></a>HAL_TIM_OC_ConfigChannel</STRONG> (Thumb, 388 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_OC_ConfigChannel))
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ec]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, main.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ReadCapturedValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1f7]"></a>HAL_TIM_OC_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_OC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f8]"></a>HAL_TIM_OC_MspInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_hal_msp.o(i.HAL_TIM_OC_MspInit))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
</UL>

<P><STRONG><a name="[1ed]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1ee]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1f6]"></a>HAL_TIM_ReadCapturedValue</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_ReadCapturedValue))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
</UL>

<P><STRONG><a name="[1f0]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1f9]"></a>HCI_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hci.o(i.HCI_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ca]"></a>HCI_Isr</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, hci.o(i.HCI_Isr))
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SPI_EXTI_Flag
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[200]"></a>HTS221_Activate</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Activate))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Sensor_Enable
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Sensor_Enable
</UL>

<P><STRONG><a name="[203]"></a>HTS221_DeActivate</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_DeActivate))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Sensor_Disable
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_DeInit
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Sensor_Disable
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_DeInit
</UL>

<P><STRONG><a name="[204]"></a>HTS221_Get_DataStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Get_DataStatus))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_DRDY_Status
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_DRDY_Status
</UL>

<P><STRONG><a name="[205]"></a>HTS221_Get_DeviceID</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Get_DeviceID))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_WhoAmI
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Check_WhoAmI
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_WhoAmI
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Check_WhoAmI
</UL>

<P><STRONG><a name="[206]"></a>HTS221_Get_Humidity</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Get_Humidity))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_Hum
</UL>

<P><STRONG><a name="[207]"></a>HTS221_Get_Odr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Get_Odr))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_ODR
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Get_ODR
</UL>

<P><STRONG><a name="[208]"></a>HTS221_Get_Temperature</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Get_Temperature))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Get_Temp
</UL>

<P><STRONG><a name="[201]"></a>HTS221_ReadReg</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_ReadReg))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Odr
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DataStatus
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Read_Reg
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Read_Reg
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>

<P><STRONG><a name="[20c]"></a>HTS221_Set_BduMode</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Set_BduMode))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>

<P><STRONG><a name="[20b]"></a>HTS221_Set_Odr</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_Set_Odr))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Set_ODR_Value
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Set_ODR_Value
</UL>

<P><STRONG><a name="[202]"></a>HTS221_WriteReg</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_WriteReg))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Write_Reg
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Write_Reg
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>

<P><STRONG><a name="[20f]"></a>HTS221_assert_failed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hts221_driver.o(i.HTS221_assert_failed), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[210]"></a>Hal_Write_Serial</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, sensortile_bluenrg.o(i.Hal_Write_Serial))
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[ae]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[217]"></a>InitHWFeatures</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hwadvancefeatures.o(i.InitHWFeatures))
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[219]"></a>InitTargetPlatform</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, targetplatform.o(i.InitTargetPlatform))
<BR><BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init_All
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Sensor_Enable
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Sensor_Enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_Enable
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HUMIDITY_Sensor_Enable
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HUMIDITY_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Sensor_Enable
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Sensor_Enable
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[221]"></a>LPS22HB_Get_DataStatus</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Get_DataStatus))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_DRDY_Status
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_DRDY_Status
</UL>

<P><STRONG><a name="[223]"></a>LPS22HB_Get_DeviceID</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Get_DeviceID))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_WhoAmI
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Check_WhoAmI
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_WhoAmI
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Check_WhoAmI
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[225]"></a>LPS22HB_Get_Odr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Get_Odr))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
</UL>

<P><STRONG><a name="[226]"></a>LPS22HB_Get_Pressure</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Get_Pressure))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_Press
</UL>

<P><STRONG><a name="[227]"></a>LPS22HB_Get_Temperature</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Get_Temperature))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_Temp
</UL>

<P><STRONG><a name="[222]"></a>LPS22HB_ReadReg</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_ReadReg))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Read_Reg
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Read_Reg
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SwResetAndMemoryBoot
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_PowerMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilterCutoff
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilter
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Bdu
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_AutomaticIncrementRegAddress
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temperature
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Pressure
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Odr
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DataStatus
</UL>

<P><STRONG><a name="[22e]"></a>LPS22HB_Set_AutomaticIncrementRegAddress</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Set_AutomaticIncrementRegAddress))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[22d]"></a>LPS22HB_Set_Bdu</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Set_Bdu))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[22b]"></a>LPS22HB_Set_LowPassFilter</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Set_LowPassFilter))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[22c]"></a>LPS22HB_Set_LowPassFilterCutoff</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Set_LowPassFilterCutoff))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[22a]"></a>LPS22HB_Set_Odr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Set_Odr))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Sensor_Disable
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_DeInit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Sensor_Disable
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_DeInit
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[229]"></a>LPS22HB_Set_PowerMode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_Set_PowerMode))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[19f]"></a>LPS22HB_SwResetAndMemoryBoot</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_SwResetAndMemoryBoot))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_PRESSURE_Init
</UL>

<P><STRONG><a name="[230]"></a>LPS22HB_WriteReg</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lps22hb_driver.o(i.LPS22HB_WriteReg))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Write_Reg
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Write_Reg
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SwResetAndMemoryBoot
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_PowerMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilterCutoff
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilter
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Bdu
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_AutomaticIncrementRegAddress
</UL>

<P><STRONG><a name="[231]"></a>LSM303AGR_ACC_Get_Acceleration</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_Get_Acceleration))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Axes
</UL>

<P><STRONG><a name="[233]"></a>LSM303AGR_ACC_Get_Raw_Acceleration</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_Get_Raw_Acceleration))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_AxesRaw
</UL>

<P><STRONG><a name="[234]"></a>LSM303AGR_ACC_R_FullScale</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_FullScale))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Sensitivity
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_FS
</UL>

<P><STRONG><a name="[235]"></a>LSM303AGR_ACC_R_HiRes</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_HiRes))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Sensitivity
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_AxesRaw
</UL>

<P><STRONG><a name="[236]"></a>LSM303AGR_ACC_R_LOWPWR_EN</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_LOWPWR_EN))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Sensitivity
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_AxesRaw
</UL>

<P><STRONG><a name="[237]"></a>LSM303AGR_ACC_R_ODR</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_ODR
</UL>

<P><STRONG><a name="[238]"></a>LSM303AGR_ACC_R_WHO_AM_I</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_WHO_AM_I))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_WhoAmI
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_DeInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Check_WhoAmI
</UL>

<P><STRONG><a name="[239]"></a>LSM303AGR_ACC_R_XDataAvail</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_XDataAvail))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_DRDY_Status
</UL>

<P><STRONG><a name="[23a]"></a>LSM303AGR_ACC_R_XEN</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_XEN))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[23b]"></a>LSM303AGR_ACC_R_YEN</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_YEN))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[23c]"></a>LSM303AGR_ACC_R_ZEN</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_R_ZEN))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[232]"></a>LSM303AGR_ACC_ReadReg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_ReadReg))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Read_Reg
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ZEN
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_YEN
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_XEN
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FullScale
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FifoMode
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_BlockDataUpdate
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_ZEN
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_YEN
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_XEN
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_XDataAvail
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_WHO_AM_I
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_ODR
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_LOWPWR_EN
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_HiRes
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_FullScale
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Get_Raw_Acceleration
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Get_Acceleration
</UL>

<P><STRONG><a name="[23d]"></a>LSM303AGR_ACC_W_BlockDataUpdate</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_BlockDataUpdate))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
</UL>

<P><STRONG><a name="[23f]"></a>LSM303AGR_ACC_W_FifoMode</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_FifoMode))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
</UL>

<P><STRONG><a name="[240]"></a>LSM303AGR_ACC_W_FullScale</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_FullScale))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_FS_Value
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_FS
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
</UL>

<P><STRONG><a name="[241]"></a>LSM303AGR_ACC_W_ODR</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_ODR_Value_When_Enabled
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_ODR
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Sensor_Disable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_DeInit
</UL>

<P><STRONG><a name="[242]"></a>LSM303AGR_ACC_W_XEN</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_XEN))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_Axes_Status
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
</UL>

<P><STRONG><a name="[243]"></a>LSM303AGR_ACC_W_YEN</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_YEN))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_Axes_Status
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
</UL>

<P><STRONG><a name="[244]"></a>LSM303AGR_ACC_W_ZEN</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_W_ZEN))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_Axes_Status
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Init
</UL>

<P><STRONG><a name="[23e]"></a>LSM303AGR_ACC_WriteReg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm303agr_acc_driver.o(i.LSM303AGR_ACC_WriteReg))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Write_Reg
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ZEN
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_YEN
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_XEN
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FullScale
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FifoMode
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_BlockDataUpdate
</UL>

<P><STRONG><a name="[245]"></a>LSM303AGR_MAG_Get_Raw_Magnetic</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_Get_Raw_Magnetic))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Get_AxesRaw
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Get_Axes
</UL>

<P><STRONG><a name="[247]"></a>LSM303AGR_MAG_R_ODR</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_R_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Get_ODR
</UL>

<P><STRONG><a name="[248]"></a>LSM303AGR_MAG_R_WHO_AM_I</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_R_WHO_AM_I))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Get_WhoAmI
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_DeInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Check_WhoAmI
</UL>

<P><STRONG><a name="[249]"></a>LSM303AGR_MAG_R_ZYXDA</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_R_ZYXDA))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Get_DRDY_Status
</UL>

<P><STRONG><a name="[246]"></a>LSM303AGR_MAG_ReadReg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_ReadReg))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Read_Reg
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ST
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ODR
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_MD
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_BDU
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_ZYXDA
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_WHO_AM_I
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_ODR
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Get_Raw_Magnetic
</UL>

<P><STRONG><a name="[24a]"></a>LSM303AGR_MAG_W_BDU</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_W_BDU))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_WriteReg
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Init
</UL>

<P><STRONG><a name="[24c]"></a>LSM303AGR_MAG_W_MD</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_W_MD))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_WriteReg
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Sensor_Enable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Sensor_Disable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_DeInit
</UL>

<P><STRONG><a name="[24d]"></a>LSM303AGR_MAG_W_ODR</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_W_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_WriteReg
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Set_ODR_Value
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Set_ODR
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Init
</UL>

<P><STRONG><a name="[24e]"></a>LSM303AGR_MAG_W_ST</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_W_ST))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_WriteReg
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Init
</UL>

<P><STRONG><a name="[24b]"></a>LSM303AGR_MAG_WriteReg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm303agr_mag_driver.o(i.LSM303AGR_MAG_WriteReg))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_M_Write_Reg
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ST
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ODR
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_MD
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_BDU
</UL>

<P><STRONG><a name="[250]"></a>LSM6DSM_ACC_GYRO_GetRawAccData</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_GetRawAccData))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_AxesRaw
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Axes
</UL>

<P><STRONG><a name="[252]"></a>LSM6DSM_ACC_GYRO_GetRawGyroData</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_GetRawGyroData))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_AxesRaw
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_Axes
</UL>

<P><STRONG><a name="[253]"></a>LSM6DSM_ACC_GYRO_Get_GetStepCounter</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_Get_GetStepCounter))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Step_Count
</UL>

<P><STRONG><a name="[254]"></a>LSM6DSM_ACC_GYRO_R_D6D_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_D6D_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_Status
</UL>

<P><STRONG><a name="[255]"></a>LSM6DSM_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Double_Tap_Detection_Status
</UL>

<P><STRONG><a name="[256]"></a>LSM6DSM_ACC_GYRO_R_DSD_XH</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DSD_XH))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_XH
</UL>

<P><STRONG><a name="[257]"></a>LSM6DSM_ACC_GYRO_R_DSD_XL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DSD_XL))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_XL
</UL>

<P><STRONG><a name="[258]"></a>LSM6DSM_ACC_GYRO_R_DSD_YH</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DSD_YH))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_YH
</UL>

<P><STRONG><a name="[259]"></a>LSM6DSM_ACC_GYRO_R_DSD_YL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DSD_YL))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_YL
</UL>

<P><STRONG><a name="[25a]"></a>LSM6DSM_ACC_GYRO_R_DSD_ZH</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DSD_ZH))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_ZH
</UL>

<P><STRONG><a name="[25b]"></a>LSM6DSM_ACC_GYRO_R_DSD_ZL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_DSD_ZL))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_6D_Orientation_ZL
</UL>

<P><STRONG><a name="[25c]"></a>LSM6DSM_ACC_GYRO_R_FF_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_FF_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Free_Fall_Detection_Status
</UL>

<P><STRONG><a name="[25d]"></a>LSM6DSM_ACC_GYRO_R_FS_125</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_FS_125))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_Sensitivity
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_FS
</UL>

<P><STRONG><a name="[25e]"></a>LSM6DSM_ACC_GYRO_R_FS_G</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_FS_G))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_Sensitivity
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_FS
</UL>

<P><STRONG><a name="[25f]"></a>LSM6DSM_ACC_GYRO_R_FS_XL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_FS_XL))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Sensitivity
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_FS
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Axes
</UL>

<P><STRONG><a name="[260]"></a>LSM6DSM_ACC_GYRO_R_ODR_G</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_ODR_G))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_ODR
</UL>

<P><STRONG><a name="[261]"></a>LSM6DSM_ACC_GYRO_R_ODR_XL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_ODR_XL))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_ODR
</UL>

<P><STRONG><a name="[262]"></a>LSM6DSM_ACC_GYRO_R_PEDO_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_PEDO_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Pedometer_Status
</UL>

<P><STRONG><a name="[263]"></a>LSM6DSM_ACC_GYRO_R_SINGLE_TAP_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_SINGLE_TAP_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Single_Tap_Detection_Status
</UL>

<P><STRONG><a name="[264]"></a>LSM6DSM_ACC_GYRO_R_TILT_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_TILT_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Tilt_Detection_Status
</UL>

<P><STRONG><a name="[265]"></a>LSM6DSM_ACC_GYRO_R_WHO_AM_I</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_WHO_AM_I))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_WhoAmI
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_WhoAmI
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
</UL>

<P><STRONG><a name="[266]"></a>LSM6DSM_ACC_GYRO_R_WU_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_R_WU_EV_STATUS))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_Wake_Up_Detection_Status
</UL>

<P><STRONG><a name="[267]"></a>LSM6DSM_ACC_GYRO_W_6DEvOnInt2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_6DEvOnInt2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_6D_Orientation
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_6D_Orientation
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[269]"></a>LSM6DSM_ACC_GYRO_W_BASIC_INT</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_BASIC_INT))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Wake_Up_Detection
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_6D_Orientation
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Wake_Up_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Free_Fall_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_6D_Orientation
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[26a]"></a>LSM6DSM_ACC_GYRO_W_BDU</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_BDU))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Init
</UL>

<P><STRONG><a name="[26b]"></a>LSM6DSM_ACC_GYRO_W_DUR</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_DUR))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Tap_Duration_Time
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[26c]"></a>LSM6DSM_ACC_GYRO_W_EmbeddedAccess</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_EmbeddedAccess))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
</UL>

<P><STRONG><a name="[26d]"></a>LSM6DSM_ACC_GYRO_W_FFEvOnInt2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FFEvOnInt2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Free_Fall_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[26e]"></a>LSM6DSM_ACC_GYRO_W_FF_Duration</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FF_Duration))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Free_Fall_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[26f]"></a>LSM6DSM_ACC_GYRO_W_FF_THS</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FF_THS))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Free_Fall_Threshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Free_Fall_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[270]"></a>LSM6DSM_ACC_GYRO_W_FIFO_MODE</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FIFO_MODE))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Init
</UL>

<P><STRONG><a name="[271]"></a>LSM6DSM_ACC_GYRO_W_FS_125</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FS_125))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_FS_Value
</UL>

<P><STRONG><a name="[272]"></a>LSM6DSM_ACC_GYRO_W_FS_G</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FS_G))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_FS_Value
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_FS
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Init
</UL>

<P><STRONG><a name="[273]"></a>LSM6DSM_ACC_GYRO_W_FS_XL</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FS_XL))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_FS_Value
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_FS
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Wake_Up_Detection
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Tilt_Detection
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Pedometer
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_6D_Orientation
</UL>

<P><STRONG><a name="[274]"></a>LSM6DSM_ACC_GYRO_W_FUNC_EN</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_FUNC_EN))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Tilt_Detection
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Pedometer
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Tilt_Detection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Pedometer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[275]"></a>LSM6DSM_ACC_GYRO_W_IF_Addr_Incr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_IF_Addr_Incr))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Init
</UL>

<P><STRONG><a name="[276]"></a>LSM6DSM_ACC_GYRO_W_ODR_G</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_ODR_G))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_ODR_Value_When_Enabled
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_ODR
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Sensor_Disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_DeInit
</UL>

<P><STRONG><a name="[277]"></a>LSM6DSM_ACC_GYRO_W_ODR_XL</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_ODR_XL))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value_When_Enabled
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Sensor_Disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[278]"></a>LSM6DSM_ACC_GYRO_W_PEDO</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_PEDO))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Pedometer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Pedometer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[279]"></a>LSM6DSM_ACC_GYRO_W_PedoStepReset</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_PedoStepReset))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Step_Counter_Reset
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Step_Counter_Reset
</UL>

<P><STRONG><a name="[27a]"></a>LSM6DSM_ACC_GYRO_W_PedoThreshold</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_PedoThreshold))
<BR><BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_EmbeddedAccess
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Pedometer_Threshold
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Pedometer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Pedometer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[27b]"></a>LSM6DSM_ACC_GYRO_W_QUIET_Duration</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_QUIET_Duration))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Tap_Quiet_Time
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[27c]"></a>LSM6DSM_ACC_GYRO_W_SHOCK_Duration</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_SHOCK_Duration))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Tap_Shock_Time
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[27d]"></a>LSM6DSM_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[27e]"></a>LSM6DSM_ACC_GYRO_W_SIXD_THS</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_SIXD_THS))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_6D_Orientation
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_6D_Orientation
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[27f]"></a>LSM6DSM_ACC_GYRO_W_SLEEP_DUR</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_SLEEP_DUR))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[280]"></a>LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Pedometer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Pedometer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[281]"></a>LSM6DSM_ACC_GYRO_W_SingleTapOnInt2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_SingleTapOnInt2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
</UL>

<P><STRONG><a name="[282]"></a>LSM6DSM_ACC_GYRO_W_TAP_THS</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TAP_THS))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Tap_Threshold
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[283]"></a>LSM6DSM_ACC_GYRO_W_TAP_X_EN</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TAP_X_EN))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[284]"></a>LSM6DSM_ACC_GYRO_W_TAP_Y_EN</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TAP_Y_EN))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[285]"></a>LSM6DSM_ACC_GYRO_W_TAP_Z_EN</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TAP_Z_EN))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[286]"></a>LSM6DSM_ACC_GYRO_W_TILT</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TILT))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Tilt_Detection
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Tilt_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[287]"></a>LSM6DSM_ACC_GYRO_W_TIMER_HR</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TIMER_HR))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[288]"></a>LSM6DSM_ACC_GYRO_W_TapEvOnInt2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TapEvOnInt2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[289]"></a>LSM6DSM_ACC_GYRO_W_TiltEvOnInt2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_TiltEvOnInt2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Tilt_Detection
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Tilt_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[28a]"></a>LSM6DSM_ACC_GYRO_W_WAKE_DUR</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_WAKE_DUR))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Wake_Up_Detection
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Wake_Up_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[28b]"></a>LSM6DSM_ACC_GYRO_W_WK_THS</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_WK_THS))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_Wake_Up_Threshold
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Wake_Up_Detection
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Wake_Up_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[28c]"></a>LSM6DSM_ACC_GYRO_W_WUEvOnInt2</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_W_WUEvOnInt2))
<BR><BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Wake_Up_Detection
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Wake_Up_Detection
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>

<P><STRONG><a name="[1a3]"></a>LSM6DSM_Sensor_IO_ITConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sensortile.o(i.LSM6DSM_Sensor_IO_ITConfig))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_ACCELERO_Init
</UL>

<P><STRONG><a name="[af]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[290]"></a>Osal_MemCpy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osal.o(i.Osal_MemCpy))
<BR><BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_random_address
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
</UL>

<P><STRONG><a name="[292]"></a>Osal_MemSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osal.o(i.Osal_MemSet))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_random_address
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB05A1
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB04A1
</UL>

<P><STRONG><a name="[b4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[299]"></a>SensorTile_oledShow</STRONG> (Thumb, 414 bytes, Stack size 0 bytes, sensortile_oledshow.o(i.SensorTile_oledShow))
<BR><BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_UpdateScreen
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_SetCursor
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteChineseString
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteChar
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_ClearScreen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[192]"></a>Sensor_IO_I2C_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_I2C_Init))
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_TEMPERATURE_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HTS221_HUMIDITY_Init
</UL>

<P><STRONG><a name="[20d]"></a>Sensor_IO_Read</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_Read))
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Read
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Stop
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Get_WhoAmI
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_ReadReg
</UL>

<P><STRONG><a name="[2a1]"></a>Sensor_IO_SPI_CS_Disable</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_CS_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Write
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Read
</UL>

<P><STRONG><a name="[2a2]"></a>Sensor_IO_SPI_CS_Enable</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_CS_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Write
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Read
</UL>

<P><STRONG><a name="[19d]"></a>Sensor_IO_SPI_CS_Init</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_CS_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_PRESSURE_Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_MAGNETO_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_GYRO_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_ACCELERO_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_ACCELERO_Init
</UL>

<P><STRONG><a name="[21a]"></a>Sensor_IO_SPI_CS_Init_All</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_CS_Init_All))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
</UL>

<P><STRONG><a name="[19c]"></a>Sensor_IO_SPI_Init</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_PRESSURE_Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_MAGNETO_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_GYRO_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_ACCELERO_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_ACCELERO_Init
</UL>

<P><STRONG><a name="[2a0]"></a>Sensor_IO_SPI_Read</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_Read))
<BR><BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Enable
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[2a4]"></a>Sensor_IO_SPI_Write</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_SPI_Write))
<BR><BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Enable
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>

<P><STRONG><a name="[19e]"></a>Sensor_IO_Write</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, sensortile.o(i.Sensor_IO_Write))
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Write
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SENSORTILE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_WriteReg
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_TEMPERATURE_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS22HB_PRESSURE_Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_MAGNETO_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_GYRO_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DSM_ACCELERO_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM303AGR_ACCELERO_Init
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Write
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Stop
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Reset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_WriteReg
</UL>

<P><STRONG><a name="[185]"></a>Stderr_Update</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, sensor_service.o(i.Stderr_Update))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Environmental_Update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Notify
</UL>

<P><STRONG><a name="[b5]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[108]"></a>SystemInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.TIM1_CC_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>TIM4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.TIM4_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1e9]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[1f4]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[212]"></a>Timer_Expired</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gp_timer.o(i.Timer_Expired))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[211]"></a>Timer_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gp_timer.o(i.Timer_Set))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[2a7]"></a>UpdateOledSensorData</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, main.o(i.UpdateOledSensorData))
<BR><BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_UpdateScreen
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_SetCursor
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Environmental_Update
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_IsInitialized
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Get_Temp
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_IsInitialized
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Get_Press
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HUMIDITY_IsInitialized
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HUMIDITY_Get_Hum
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2ae]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[20e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0printf))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_assert_failed
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>

<P><STRONG><a name="[2b0]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[184]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Environmental_Update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Notify
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[134]"></a>__ARM_common_memclr4_9</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, osx_motion_fx.o(i.__ARM_common_memclr4_9))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
</UL>

<P><STRONG><a name="[139]"></a>__ARM_common_memset4_12</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, osx_motion_fx.o(i.__ARM_common_memset4_12))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[2b4]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[147]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 0 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
</UL>

<P><STRONG><a name="[2b9]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 0 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[131]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 0 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
</UL>

<P><STRONG><a name="[13d]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[13f]"></a>__hardfp_fmax</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, fmax.o(i.__hardfp_fmax))
<BR><BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_dcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[12d]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 0 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
</UL>

<P><STRONG><a name="[124]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
</UL>

<P><STRONG><a name="[2b6]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[2bd]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[2b1]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[2ba]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[2b3]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[2be]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[2b5]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[2b2]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[2c4]"></a>aci_gap_init_IDB04A1</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bluenrg_gap_aci.o(i.aci_gap_init_IDB04A1))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c6]"></a>aci_gap_init_IDB05A1</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, bluenrg_gap_aci.o(i.aci_gap_init_IDB05A1))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c7]"></a>aci_gap_set_auth_requirement</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, bluenrg_gap_aci.o(i.aci_gap_set_auth_requirement))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[188]"></a>aci_gatt_add_char</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_char))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_SWServW2ST_Service
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_HWServW2ST_Service
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ConsoleW2ST_Service
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ConfigW2ST_Service
</UL>

<P><STRONG><a name="[187]"></a>aci_gatt_add_serv</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_serv))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_SWServW2ST_Service
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_HWServW2ST_Service
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ConsoleW2ST_Service
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ConfigW2ST_Service
</UL>

<P><STRONG><a name="[2c8]"></a>aci_gatt_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, bluenrg_gatt_aci.o(i.aci_gatt_init))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[183]"></a>aci_gatt_update_char_value</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, bluenrg_gatt_aci.o(i.aci_gatt_update_char_value))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Environmental_Update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Notify
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c9]"></a>aci_hal_set_tx_power_level</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, bluenrg_hal_aci.o(i.aci_hal_set_tx_power_level))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2bb]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, atan.o(i.atan))
<BR><BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[2b7]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fabs.o(i.fabs))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[10a]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fputc.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[2ca]"></a>getBlueNRGVersion</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, bluenrg_utils.o(i.getBlueNRGVersion))
<BR><BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2cb]"></a>hci_le_read_local_version</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, hci.o(i.hci_le_read_local_version))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
</UL>

<P><STRONG><a name="[2cc]"></a>hci_le_set_random_address</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, hci.o(i.hci_le_set_random_address))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c5]"></a>hci_send_req</STRONG> (Thumb, 504 bytes, Stack size 0 bytes, hci.o(i.hci_send_req))
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_tail
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_get_size
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_random_address
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB05A1
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB04A1
</UL>

<P><STRONG><a name="[2cd]"></a>list_get_size</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ble_list.o(i.list_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[1fa]"></a>list_init_head</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_list.o(i.list_init_head))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
</UL>

<P><STRONG><a name="[1ff]"></a>list_insert_head</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_list.o(i.list_insert_head))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[1fb]"></a>list_insert_tail</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_list.o(i.list_insert_tail))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
</UL>

<P><STRONG><a name="[1fd]"></a>list_is_empty</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_list.o(i.list_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[1fe]"></a>list_remove_head</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ble_list.o(i.list_remove_head))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[2ce]"></a>list_remove_tail</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ble_list.o(i.list_remove_tail))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[107]"></a>main</STRONG> (Thumb, 1136 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setCalibrationData
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_isCalibrated
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_random_address
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB05A1
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init_IDB04A1
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTargetPlatform
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_EnableMSIPLLMode
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_DisableLSECSS
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_FS_Value
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Wake_Up_Detection_Status_Ext
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Tilt_Detection_Status_Ext
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Single_Tap_Detection_Status_Ext
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Sensitivity
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Pedometer_Status_Ext
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Free_Fall_Detection_Status_Ext
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Double_Tap_Detection_Status_Ext
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_Status_Ext
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_SWServW2ST_Service
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_HWServW2ST_Service
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ConsoleW2ST_Service
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_ConfigW2ST_Service
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Notify
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHWFeatures
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStepHWPedometer
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableHWFreeFall
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2b8]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, sqrt.o(i.sqrt))
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[29a]"></a>ssd1306_ClearScreen</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_ClearScreen))
<BR><BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_UpdateScreen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
</UL>

<P><STRONG><a name="[2dd]"></a>ssd1306_DrawPixel</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_DrawPixel))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteChineseString
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteChar
</UL>

<P><STRONG><a name="[2d2]"></a>ssd1306_Init</STRONG> (Thumb, 358 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_UpdateScreen
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteCommand
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29b]"></a>ssd1306_SetCursor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_SetCursor))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>

<P><STRONG><a name="[29d]"></a>ssd1306_UpdateScreen</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_UpdateScreen))
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_ClearScreen
</UL>

<P><STRONG><a name="[29f]"></a>ssd1306_WriteChar</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_WriteChar))
<BR><BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
</UL>

<P><STRONG><a name="[29c]"></a>ssd1306_WriteChineseString</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_WriteChineseString))
<BR><BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
</UL>

<P><STRONG><a name="[29e]"></a>ssd1306_WriteString</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_WriteString))
<BR><BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTile_oledShow
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOledSensorData
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[214]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>

<P><STRONG><a name="[213]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[1d1]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[1d5]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[1d2]"></a>I2C_TransferConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[1d0]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[1d3]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[1d6]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[1e3]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[1de]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 408 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI1_Config))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1df]"></a>RCCEx_PLLSAI2_Config</STRONG> (Thumb, 350 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI2_Config))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1e6]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[294]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[1e5]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[1f3]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[1f5]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[6]"></a>HTS221_H_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>HTS221_H_DeInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>HTS221_H_Get_DRDY_Status</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Get_DRDY_Status))
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>HTS221_H_Get_Hum</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Get_Hum))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Humidity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>HTS221_H_Get_ODR</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>HTS221_H_Get_WhoAmI</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>HTS221_H_Init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Init))
<BR><BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>HTS221_H_Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Read_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>HTS221_H_Sensor_Disable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>HTS221_H_Sensor_Enable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>HTS221_H_Set_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>HTS221_H_Set_ODR_Value</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>HTS221_H_Write_Reg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_H_Write_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[209]"></a>HTS221_Init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_Init))
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_BduMode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Init
</UL>

<P><STRONG><a name="[20a]"></a>HTS221_Set_ODR</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Set_ODR
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Set_ODR
</UL>

<P><STRONG><a name="[13]"></a>HTS221_T_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>HTS221_T_DeInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>HTS221_T_Get_DRDY_Status</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Get_DRDY_Status))
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>HTS221_T_Get_ODR</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>HTS221_T_Get_Temp</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Get_Temp))
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_Temperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>HTS221_T_Get_WhoAmI</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>HTS221_T_Init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Init))
<BR><BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>HTS221_T_Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Read_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>HTS221_T_Sensor_Disable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeActivate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>HTS221_T_Sensor_Enable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Activate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>HTS221_T_Set_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>HTS221_T_Set_ODR_Value</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>HTS221_T_Write_Reg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hts221_driver_hl.o(i.HTS221_T_Write_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[224]"></a>LPS22HB_Get_ODR</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Get_ODR
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Get_ODR
</UL>

<P><STRONG><a name="[228]"></a>LPS22HB_Initialize</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_Initialize))
<BR><BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_PowerMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilterCutoff
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_LowPassFilter
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Bdu
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_AutomaticIncrementRegAddress
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Init
</UL>

<P><STRONG><a name="[20]"></a>LPS22HB_P_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>LPS22HB_P_DeInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>LPS22HB_P_Get_DRDY_Status</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_DRDY_Status))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>LPS22HB_P_Get_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>LPS22HB_P_Get_Press</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_Press))
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Pressure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>LPS22HB_P_Get_WhoAmI</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>LPS22HB_P_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Init))
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>LPS22HB_P_Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Read_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>LPS22HB_P_Sensor_Disable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>LPS22HB_P_Sensor_Enable</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>LPS22HB_P_Set_ODR</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>LPS22HB_P_Set_ODR_Value</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>LPS22HB_P_Write_Reg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_P_Write_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[22f]"></a>LPS22HB_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_Set_ODR_Value_When_Enabled))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Set_ODR_Value
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_T_Sensor_Enable
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Set_ODR_Value
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_P_Sensor_Enable
</UL>

<P><STRONG><a name="[2d]"></a>LPS22HB_T_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>LPS22HB_T_DeInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>LPS22HB_T_Get_DRDY_Status</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_DRDY_Status))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DataStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>LPS22HB_T_Get_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>LPS22HB_T_Get_Temp</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_Temp))
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_Temperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>LPS22HB_T_Get_WhoAmI</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_DeviceID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>LPS22HB_T_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Init))
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>LPS22HB_T_Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Read_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>LPS22HB_T_Sensor_Disable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>LPS22HB_T_Sensor_Enable</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>LPS22HB_T_Set_ODR</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Get_ODR
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_Odr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>LPS22HB_T_Set_ODR_Value</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>LPS22HB_T_Write_Reg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lps22hb_driver_hl.o(i.LPS22HB_T_Write_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>LSM303AGR_X_Check_WhoAmI</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>LSM303AGR_X_DeInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_ODR
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>LSM303AGR_X_Get_Axes</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_Axes))
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Get_Acceleration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>LSM303AGR_X_Get_AxesRaw</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_AxesRaw))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_LOWPWR_EN
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_HiRes
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Get_Raw_Acceleration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>LSM303AGR_X_Get_Axes_Status</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_Axes_Status))
<BR><BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_ZEN
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_YEN
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_XEN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>LSM303AGR_X_Get_DRDY_Status</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_DRDY_Status))
<BR><BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_XDataAvail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>LSM303AGR_X_Get_FS</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_FS))
<BR><BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_FullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>LSM303AGR_X_Get_ODR</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Sensor_Disable
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>LSM303AGR_X_Get_Sensitivity</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_Sensitivity))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_LOWPWR_EN
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_HiRes
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_FullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>LSM303AGR_X_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>LSM303AGR_X_Init</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Init))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ZEN
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_YEN
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_XEN
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FullScale
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FifoMode
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_BlockDataUpdate
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>LSM303AGR_X_Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Read_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>LSM303AGR_X_Sensor_Disable</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Get_ODR
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>LSM303AGR_X_Sensor_Enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>LSM303AGR_X_Set_Axes_Status</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_Axes_Status))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ZEN
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_YEN
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_XEN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>LSM303AGR_X_Set_FS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_FS))
<BR><BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>LSM303AGR_X_Set_FS_Value</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_FS_Value))
<BR><BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_FullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>LSM303AGR_X_Set_ODR</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>LSM303AGR_X_Set_ODR_Value</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[24f]"></a>LSM303AGR_X_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Set_ODR_Value_When_Enabled))
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_W_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Set_ODR_Value
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_X_Sensor_Enable
</UL>

<P><STRONG><a name="[47]"></a>LSM303AGR_X_Write_Reg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lsm303agr_acc_driver_hl.o(i.LSM303AGR_X_Write_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_acc_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>LSM303AGR_M_Check_WhoAmI</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>LSM303AGR_M_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_MD
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>LSM303AGR_M_Get_Axes</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_Axes))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Get_Raw_Magnetic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>LSM303AGR_M_Get_AxesRaw</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_AxesRaw))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Get_Raw_Magnetic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>LSM303AGR_M_Get_DRDY_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_DRDY_Status))
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_ZYXDA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>LSM303AGR_M_Get_FS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_FS))
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>LSM303AGR_M_Get_ODR</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>LSM303AGR_M_Get_Sensitivity</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_Sensitivity))
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>LSM303AGR_M_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>LSM303AGR_M_Init</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Init))
<BR><BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ST
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ODR
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_MD
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_BDU
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>LSM303AGR_M_Read_Reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Read_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>LSM303AGR_M_Sensor_Disable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_MD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>LSM303AGR_M_Sensor_Enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_MD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>LSM303AGR_M_Set_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_FS))
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>LSM303AGR_M_Set_FS_Value</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_FS_Value))
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>LSM303AGR_M_Set_ODR</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>LSM303AGR_M_Set_ODR_Value</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_W_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>LSM303AGR_M_Write_Reg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lsm303agr_mag_driver_hl.o(i.LSM303AGR_M_Write_Reg))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[251]"></a>LSM6DSM_ACC_GYRO_ReadReg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_ReadReg))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WUEvOnInt2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WK_THS
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TiltEvOnInt2
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TapEvOnInt2
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TIMER_HR
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TILT
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SingleTapOnInt2
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SIXD_THS
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoStepReset
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PEDO
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_G
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_125
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_THS
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_Duration
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FFEvOnInt2
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_EmbeddedAccess
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_DUR
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BDU
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_6DEvOnInt2
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_WU_EV_STATUS
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_WHO_AM_I
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_TILT_EV_STATUS
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_SINGLE_TAP_EV_STATUS
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_PEDO_EV_STATUS
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_ODR_XL
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_ODR_G
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_XL
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_G
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_125
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FF_EV_STATUS
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_ZL
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_ZH
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_YL
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_YH
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_XL
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_XH
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_D6D_EV_STATUS
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_Get_GetStepCounter
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_GetRawGyroData
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_GetRawAccData
</UL>

<P><STRONG><a name="[268]"></a>LSM6DSM_ACC_GYRO_WriteReg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver.o(i.LSM6DSM_ACC_GYRO_WriteReg))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WUEvOnInt2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WK_THS
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TiltEvOnInt2
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TapEvOnInt2
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TIMER_HR
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TILT
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SingleTapOnInt2
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SIXD_THS
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoStepReset
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PEDO
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_G
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_125
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_THS
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_Duration
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FFEvOnInt2
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_EmbeddedAccess
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_DUR
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BDU
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_6DEvOnInt2
</UL>

<P><STRONG><a name="[28d]"></a>LSM6DSM_Check_WhoAmI</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_WHO_AM_I
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Check_WhoAmI
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_DeInit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Check_WhoAmI
</UL>

<P><STRONG><a name="[94]"></a>LSM6DSM_G_Check_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>LSM6DSM_G_DeInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_ODR
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[95]"></a>LSM6DSM_G_Get_Axes</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_Axes))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_Sensitivity
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_GetRawGyroData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[96]"></a>LSM6DSM_G_Get_AxesRaw</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_AxesRaw))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_GetRawGyroData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9b]"></a>LSM6DSM_G_Get_FS</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_FS))
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_G
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_125
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[98]"></a>LSM6DSM_G_Get_ODR</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Sensor_Disable
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[97]"></a>LSM6DSM_G_Get_Sensitivity</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_Sensitivity))
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_G
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_125
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[93]"></a>LSM6DSM_G_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>LSM6DSM_G_Init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Init))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_G
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BDU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[92]"></a>LSM6DSM_G_Sensor_Disable</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Get_ODR
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[91]"></a>LSM6DSM_G_Sensor_Enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9c]"></a>LSM6DSM_G_Set_FS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_FS))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9d]"></a>LSM6DSM_G_Set_FS_Value</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_FS_Value))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_G
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_125
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[99]"></a>LSM6DSM_G_Set_ODR</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9a]"></a>LSM6DSM_G_Set_ODR_Value</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[28e]"></a>LSM6DSM_G_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_G_Set_ODR_Value_When_Enabled))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Set_ODR_Value
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_G_Sensor_Enable
</UL>

<P><STRONG><a name="[85]"></a>LSM6DSM_X_Check_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Check_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[81]"></a>LSM6DSM_X_DeInit</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_DeInit))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_ODR
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Single_Tap_Detection
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Disable_Double_Tap_Detection
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WUEvOnInt2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WK_THS
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TiltEvOnInt2
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TILT
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SIXD_THS
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PEDO
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_THS
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_Duration
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FFEvOnInt2
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_6DEvOnInt2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>LSM6DSM_X_Disable_6D_Orientation</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_6D_Orientation))
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SIXD_THS
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_6DEvOnInt2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>LSM6DSM_X_Disable_Double_Tap_Detection</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Double_Tap_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TapEvOnInt2
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_DUR
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>LSM6DSM_X_Disable_Free_Fall_Detection</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Free_Fall_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_THS
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_Duration
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FFEvOnInt2
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>LSM6DSM_X_Disable_Pedometer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Pedometer))
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PEDO
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>LSM6DSM_X_Disable_Single_Tap_Detection</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Single_Tap_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SingleTapOnInt2
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>LSM6DSM_X_Disable_Step_Counter_Reset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Step_Counter_Reset))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>LSM6DSM_X_Disable_Tilt_Detection</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Tilt_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TiltEvOnInt2
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TILT
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>LSM6DSM_X_Disable_Wake_Up_Detection</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Disable_Wake_Up_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WUEvOnInt2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WK_THS
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>LSM6DSM_X_Enable_6D_Orientation</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_6D_Orientation))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SIXD_THS
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_6DEvOnInt2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>LSM6DSM_X_Enable_Double_Tap_Detection</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Double_Tap_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TapEvOnInt2
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_DUR
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>LSM6DSM_X_Enable_Free_Fall_Detection</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Free_Fall_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TIMER_HR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_THS
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_Duration
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FFEvOnInt2
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>LSM6DSM_X_Enable_Pedometer</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Pedometer))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_STEP_DELTA_on_INT2
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PEDO
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>LSM6DSM_X_Enable_Single_Tap_Detection</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Single_Tap_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SingleTapOnInt2
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>LSM6DSM_X_Enable_Step_Counter_Reset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Step_Counter_Reset))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>LSM6DSM_X_Enable_Tilt_Detection</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Tilt_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TiltEvOnInt2
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TILT
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FUNC_EN
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>LSM6DSM_X_Enable_Wake_Up_Detection</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Enable_Wake_Up_Detection))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WUEvOnInt2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WK_THS
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BASIC_INT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>LSM6DSM_X_Get_6D_Orientation_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_Status))
<BR><BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_D6D_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7b]"></a>LSM6DSM_X_Get_6D_Orientation_XH</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_XH))
<BR><BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_XH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7a]"></a>LSM6DSM_X_Get_6D_Orientation_XL</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_XL))
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7d]"></a>LSM6DSM_X_Get_6D_Orientation_YH</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_YH))
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_YH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7c]"></a>LSM6DSM_X_Get_6D_Orientation_YL</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_YL))
<BR><BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_YL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7f]"></a>LSM6DSM_X_Get_6D_Orientation_ZH</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_ZH))
<BR><BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_ZH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7e]"></a>LSM6DSM_X_Get_6D_Orientation_ZL</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_6D_Orientation_ZL))
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DSD_ZL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[86]"></a>LSM6DSM_X_Get_Axes</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Axes))
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_XL
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_GetRawAccData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[87]"></a>LSM6DSM_X_Get_AxesRaw</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_AxesRaw))
<BR><BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_GetRawAccData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>LSM6DSM_X_Get_Double_Tap_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Double_Tap_Detection_Status))
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8c]"></a>LSM6DSM_X_Get_FS</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_FS))
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>LSM6DSM_X_Get_Free_Fall_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Free_Fall_Detection_Status))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FF_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[89]"></a>LSM6DSM_X_Get_ODR</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Sensor_Disable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>LSM6DSM_X_Get_Pedometer_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Pedometer_Status))
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_PEDO_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>LSM6DSM_X_Get_Sensitivity</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Sensitivity))
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>LSM6DSM_X_Get_Single_Tap_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Single_Tap_Detection_Status))
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_SINGLE_TAP_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>LSM6DSM_X_Get_Step_Count</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Step_Count))
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_Get_GetStepCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>LSM6DSM_X_Get_Tilt_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Tilt_Detection_Status))
<BR><BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_TILT_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>LSM6DSM_X_Get_Wake_Up_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_Wake_Up_Detection_Status))
<BR><BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_WU_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>LSM6DSM_X_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_R_WHO_AM_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>LSM6DSM_X_Init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Init))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Check_WhoAmI
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_BDU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[83]"></a>LSM6DSM_X_Sensor_Disable</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Sensor_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Get_ODR
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>LSM6DSM_X_Sensor_Enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Sensor_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8d]"></a>LSM6DSM_X_Set_FS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_FS))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8e]"></a>LSM6DSM_X_Set_FS_Value</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_FS_Value))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>LSM6DSM_X_Set_Free_Fall_Threshold</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Free_Fall_Threshold))
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_FF_THS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8a]"></a>LSM6DSM_X_Set_ODR</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_ODR))
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8b]"></a>LSM6DSM_X_Set_ODR_Value</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_ODR_Value))
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Wake_Up_Detection
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Tilt_Detection
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Single_Tap_Detection
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Pedometer
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Free_Fall_Detection
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_Double_Tap_Detection
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Enable_6D_Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[28f]"></a>LSM6DSM_X_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_ODR_Value_When_Enabled))
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Set_ODR_Value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_X_Sensor_Enable
</UL>

<P><STRONG><a name="[65]"></a>LSM6DSM_X_Set_Pedometer_Threshold</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Pedometer_Threshold))
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_PedoThreshold
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>LSM6DSM_X_Set_Tap_Duration_Time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Duration_Time))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_DUR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>LSM6DSM_X_Set_Tap_Quiet_Time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Quiet_Time))
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_QUIET_Duration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>LSM6DSM_X_Set_Tap_Shock_Time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Shock_Time))
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_SHOCK_Duration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>LSM6DSM_X_Set_Tap_Threshold</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Tap_Threshold))
<BR><BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_TAP_THS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6c]"></a>LSM6DSM_X_Set_Wake_Up_Threshold</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lsm6dsm_acc_gyro_driver_hl.o(i.LSM6DSM_X_Set_Wake_Up_Threshold))
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_ACC_GYRO_W_WK_THS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsm_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9f]"></a>STC3115_DeInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_DeInit))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[ab]"></a>STC3115_GetAlarmStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetAlarmStatus))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a9]"></a>STC3115_GetChargeValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetChargeValue))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a6]"></a>STC3115_GetCurrent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetCurrent))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a5]"></a>STC3115_GetOCV</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetOCV))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[aa]"></a>STC3115_GetPresence</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetPresence))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>STC3115_GetSOC</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetSOC))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a7]"></a>STC3115_GetTemperature</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetTemperature))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a8]"></a>STC3115_GetVoltage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_GetVoltage))
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a0]"></a>STC3115_Get_WhoAmI</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Get_WhoAmI))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[9e]"></a>STC3115_Init</STRONG> (Thumb, 568 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a2]"></a>STC3115_Reset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Reset))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[296]"></a>STC3115_SetParam</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_SetParam))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
</UL>

<P><STRONG><a name="[295]"></a>STC3115_Status</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Status))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
</UL>

<P><STRONG><a name="[a3]"></a>STC3115_Stop</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Stop))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Write
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[a1]"></a>STC3115_Task</STRONG> (Thumb, 860 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Task))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115_driver.o(.data)
</UL>
<P><STRONG><a name="[297]"></a>STC3115_UpdateRamCRC</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_UpdateRamCRC))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Stop
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
</UL>

<P><STRONG><a name="[298]"></a>STC3115_Write</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stc3115_driver.o(i.STC3115_Write))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Stop
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Reset
</UL>

<P><STRONG><a name="[2dc]"></a>ssd1306_WriteCommand</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ssd1306.o(i.ssd1306_WriteCommand))
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_UpdateScreen
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_Init
</UL>

<P><STRONG><a name="[215]"></a>I2C_SENSORTILE_Init</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, sensortile.o(i.I2C_SENSORTILE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_I2C_Init
</UL>

<P><STRONG><a name="[190]"></a>BSP_LSM303AGR_ACCELERO_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_LSM303AGR_ACCELERO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
</UL>

<P><STRONG><a name="[18f]"></a>BSP_LSM6DSM_ACCELERO_Init</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, sensortile_accelero.o(i.BSP_LSM6DSM_ACCELERO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSM_Sensor_IO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
</UL>

<P><STRONG><a name="[194]"></a>BSP_LSM6DSM_GYRO_Init</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, sensortile_gyro.o(i.BSP_LSM6DSM_GYRO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Init
</UL>

<P><STRONG><a name="[195]"></a>BSP_HTS221_HUMIDITY_Init</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, sensortile_humidity.o(i.BSP_HTS221_HUMIDITY_Init))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HUMIDITY_Init
</UL>

<P><STRONG><a name="[1a2]"></a>BSP_LSM303AGR_MAGNETO_Init</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, sensortile_magneto.o(i.BSP_LSM303AGR_MAGNETO_Init))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Init
</UL>

<P><STRONG><a name="[19b]"></a>BSP_LPS22HB_PRESSURE_Init</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, sensortile_pressure.o(i.BSP_LPS22HB_PRESSURE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SwResetAndMemoryBoot
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Init
</UL>

<P><STRONG><a name="[196]"></a>BSP_HTS221_TEMPERATURE_Init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, sensortile_temperature.o(i.BSP_HTS221_TEMPERATURE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[1a1]"></a>BSP_LPS22HB_TEMPERATURE_Init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, sensortile_temperature.o(i.BSP_LPS22HB_TEMPERATURE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SwResetAndMemoryBoot
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_SPI_CS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[122]"></a>m_norm_eml</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[141]"></a>m_q2dcm_eml</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[135]"></a>AsyncHeadway_initialize</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_enable_9X
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_enable_6X
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
</UL>

<P><STRONG><a name="[126]"></a>m_dcm2q_eml</STRONG> (Thumb, 486 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[168]"></a>IsNotFlat</STRONG> (Thumb, 858 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
</UL>

<P><STRONG><a name="[118]"></a>compass_API_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>compass_API_SaveAcc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>compass_API_SaveMag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>compass_API_Run</STRONG> (Thumb, 1518 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>compass_API_IsCalibrated</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>compass_API_ForceReCalibration</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>getCalibrationData</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>setCalibrationData</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>findDirection</STRONG> (Thumb, 600 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
</UL>

<P><STRONG><a name="[130]"></a>iNemo_quat2heading</STRONG> (Thumb, 478 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
</UL>

<P><STRONG><a name="[132]"></a>iNemoEngine_9p6_setOrientation</STRONG> (Thumb, 1438 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_9
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setKnobs
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
</UL>

<P><STRONG><a name="[10c]"></a>iNemoEngine_API_initialize</STRONG> (Thumb, 1048 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_9
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsyncHeadway_initialize
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>iNemoEngine_API_setKnobs</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>iNemoEngine_API_getKnobs</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>iNemoEngine_API_get_status_6X</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>iNemoEngine_API_get_status_9X</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>iNemoEngine_API_enable_6X</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsyncHeadway_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>iNemoEngine_API_enable_9X</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsyncHeadway_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>iNemoEngine_API_setGbias</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>iNemoEngine_API_getGbias</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>m_qmult_eml</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[13a]"></a>m_mldivide</STRONG> (Thumb, 544 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[136]"></a>m_interp1q_constrain</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[138]"></a>m_kalman_3gyro</STRONG> (Thumb, 14450 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memset4_12
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmax
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
</UL>

<P><STRONG><a name="[143]"></a>SpacePointAlgorithm</STRONG> (Thumb, 964 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[115]"></a>iNemoEngine_API_Update</STRONG> (Thumb, 892 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>output_update</STRONG> (Thumb, 742 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
</UL>

<P><STRONG><a name="[116]"></a>iNemoEngine_API_Propagate</STRONG> (Thumb, 444 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>iNemoEngine_API_Get_Lib_Version</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>eCompass_Offset</STRONG> (Thumb, 1362 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
</UL>

<P><STRONG><a name="[144]"></a>iNemoEngine_9p6_Update</STRONG> (Thumb, 1892 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
</UL>

<P><STRONG><a name="[146]"></a>m_rt_atan2f_snf</STRONG> (Thumb, 314 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
</UL>

<P><STRONG><a name="[14a]"></a>iNemo_propagate_6X</STRONG> (Thumb, 1314 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Propagate
</UL>

<P><STRONG><a name="[149]"></a>iNemo_propagate</STRONG> (Thumb, 1300 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Propagate
</UL>

<P><STRONG><a name="[16b]"></a>rotVect</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[16c]"></a>SpacePointGyroProp</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_propagate_6X
</UL>

<P><STRONG><a name="[16f]"></a>osx_LibLocker_GetLibrary</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_IsNodeFree
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_SetHandle
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[16e]"></a>osx_LibLocker_Decrypt16</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Decrypt32
</UL>

<P><STRONG><a name="[16d]"></a>osx_LibLocker_Decrypt32</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Decrypt16
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RegisterLicense
</UL>

<P><STRONG><a name="[170]"></a>osx_LibLocker_RetrieveUID</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, osxLibraryLocker100_CM4F_Keil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[2c0]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2af]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[2c2]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2c1]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10b]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
